[package]
name = "ia"
authors = ["CowboyAI"]
description = "Information Alchemist - AI-Powered Graph Editor"
version = "0.1.0"
edition = "2024"
exclude = ["examples/"]

[lints.clippy]
all = { level = "warn", priority = -1 }

# The following ensures clippy ignores examples
# through Cargo's workspace inheritance
[workspace.lints.clippy]
all = { level = "warn", priority = -1 }

[workspace]
exclude = ["examples/", "bevy-patched"]
members = [
  "cim-component",
  "cim-infrastructure",
  "cim-compose",
  "cim-ipld",
  "cim-contextgraph",
  "cim-workflow-graph",
  "cim-ipld-graph",
  "cim-conceptgraph",
  "cim-domain",
  "cim-domain-person",
  "cim-domain-organization",
  "cim-domain-agent",
  "cim-domain-workflow",
  "cim-domain-git",
  "cim-domain-location",
  "cim-domain-graph",
  "cim-subject",
  "cim-domain-bevy",
  "cim-domain-conceptualspaces",
  "cim-domain-identity",
  "cim-domain-nix",
  "cim-domain-document",
  "cim-domain-policy",
]
resolver = "2"

[features]
default = []
dynamic = ["bevy/dynamic_linking"]
dev = ["bevy/asset_processor", "bevy/file_watcher", "bevy/default", "dynamic"]
integration-tests = []
# Feature for testing without problematic Bevy features
test-minimal = [
  "bevy/bevy_ui",
  "bevy/bevy_winit",
  "bevy/default_font",
  "bevy/bevy_text",
]

[dependencies]
# Core dependencies
rand = "0.9"
uuid = { version = "1.17.0", features = ["v4", "serde"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde-xml-rs = "0.6"

# Bevy - use default features for dev, minimal for production
bevy = { path = "bevy-patched", default-features = false, features = [
  "animation",
  "bevy_asset",
  "bevy_audio",
  "bevy_gilrs",
  "bevy_scene",
  "bevy_winit",
  "bevy_core_pipeline",
  "bevy_pbr",
  "bevy_gltf",
  "bevy_render",
  "bevy_sprite",
  "bevy_text",
  "bevy_ui",
  "multi_threaded",
  "png",
  "hdr",
  "vorbis",
  "x11",
  "bevy_gizmos",
  "tonemapping_luts",
  "default_font",
  "webgl2",
  "sysinfo_plugin",
] }

# Bevy plugins
# Using git dependency to compile against our patched Bevy
bevy_egui = { git = "https://github.com/mvlabat/bevy_egui", branch = "main" }

# Graph library
cim-compose = { path = "cim-compose" }
petgraph = { version = "0.8.1", features = ["serde-1"] }
daggy = { version = "0.9.0", features = ["serde-1"] }

# Async runtime
tokio = { version = "1.45", features = ["full"] }
async-trait = "0.1"

# NATS messaging
async-nats = { version = "0.41", features = ["service"] }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Utilities
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Content addressing
cim-ipld = { path = "cim-ipld" }
cim-contextgraph = { path = "cim-contextgraph" }
cim-workflow-graph = { path = "cim-workflow-graph" }
cim-ipld-graph = { path = "cim-ipld-graph" }
cim-domain = { path = "cim-domain" }
cim-domain-graph = { path = "cim-domain-graph" }
cim-domain-workflow = { path = "cim-domain-workflow" }
cim-domain-git = { path = "cim-domain-git" }
cim-domain-location = { path = "cim-domain-location" }
cim-domain-document = { path = "cim-domain-document" }
cim-domain-policy = { path = "cim-domain-policy" }
cim-domain-agent = { path = "cim-domain-agent" }
cim-domain-organization = { path = "cim-domain-organization" }
cim-domain-person = { path = "cim-domain-person" }
cim-subject = { path = "cim-subject" }
cim-domain-nix = { path = "cim-domain-nix" }
cid = { version = "0.11", features = ["serde"] }
multihash = { version = "0.19", features = ["std"] }
blake3 = "1.5"

# Channel implementations
crossbeam-channel = "0.5"
futures = "0.3"

# Caching
lru = "0.12"

# Time handling
time = { version = "0.3", features = ["serde", "formatting"] }

# Compression
zstd = "0.13"

# Bytes handling
bytes = "1.5"

# Parsing
nom = "7.1"
pulldown-cmark = "0.13"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.8"
uuid = { version = "1.10", features = ["v4"] }
colored = "2.1"

[profile.dev]
opt-level = 3

[profile.dev.package."*"]
opt-level = 3

[profile.release]
lto = true
codegen-units = 1

[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
strip = true

[lib]
name = "ia"
path = "src/lib.rs"

[[bin]]
name = "ia"
path = "src/main.rs"

# Demos - Only keeping the essential ones

[[example]]
name = "benchmark_contextgraph"
path = "examples/benchmark_contextgraph.rs"

[[example]]
name = "simple_benchmark"
path = "examples/simple_benchmark.rs"

[[example]]
name = "markdown_import_demo"
path = "examples/markdown_import_demo.rs"

[[example]]
name = "import_graph"
path = "examples/import_graph.rs"

[[example]]
name = "rule_context_demo"
path = "examples/rule_context_demo.rs"

[[example]]
name = "markdown_import_simple"
path = "examples/markdown_import_simple.rs"

[[example]]
name = "markdown_import_nats_demo"
path = "examples/markdown_import_nats_demo.rs"

[[example]]
name = "markdown_import_demo_simple"
path = "examples/markdown_import_demo_simple.rs"

[[example]]
name = "test_subgraph_basic"
path = "examples/test_subgraph_basic.rs"

[[example]]
name = "subgraph_demo"
path = "examples/subgraph_demo.rs"

[[example]]
name = "test_subgraph_operations"
path = "examples/test_subgraph_operations.rs"

[[example]]
name = "document_context_demo"
path = "examples/document_context_demo.rs"

[[example]]
name = "document_context_export"
path = "examples/document_context_export.rs"

[[example]]
name = "event_replay_demo"
path = "examples/event_replay_demo.rs"

[[example]]
name = "json_import_demo"
path = "examples/json_import_demo.rs"

[[example]]
name = "approval_workflow"
path = "examples/approval_workflow.rs"

# Disable the problematic experimental features
[package.metadata.bevy]
experimental_fixed_timestep = false

# Patch bevy_egui's dependencies to use our patched Bevy
[patch.crates-io]
bevy = { path = "bevy-patched" }
bevy_app = { path = "bevy-patched/crates/bevy_app" }
bevy_asset = { path = "bevy-patched/crates/bevy_asset" }
bevy_core_pipeline = { path = "bevy-patched/crates/bevy_core_pipeline" }
bevy_derive = { path = "bevy-patched/crates/bevy_derive" }
bevy_ecs = { path = "bevy-patched/crates/bevy_ecs" }
bevy_image = { path = "bevy-patched/crates/bevy_image" }
bevy_input = { path = "bevy-patched/crates/bevy_input" }
bevy_log = { path = "bevy-patched/crates/bevy_log" }
bevy_math = { path = "bevy-patched/crates/bevy_math" }
bevy_picking = { path = "bevy-patched/crates/bevy_picking" }
bevy_platform = { path = "bevy-patched/crates/bevy_platform" }
bevy_reflect = { path = "bevy-patched/crates/bevy_reflect" }
bevy_render = { path = "bevy-patched/crates/bevy_render" }
bevy_time = { path = "bevy-patched/crates/bevy_time" }
bevy_window = { path = "bevy-patched/crates/bevy_window" }
bevy_winit = { path = "bevy-patched/crates/bevy_winit" }

[[test]]
name = "integration"
path = "tests/lib.rs"
required-features = ["integration-tests"]
