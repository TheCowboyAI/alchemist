apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alchemist
  namespace: alchemist-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://alchemist.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-API-Key"
spec:
  tls:
  - hosts:
    - api.alchemist.example.com
    secretName: alchemist-tls-cert
  rules:
  - host: api.alchemist.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alchemist
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alchemist-metrics
  namespace: alchemist-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12"
spec:
  tls:
  - hosts:
    - metrics.alchemist.example.com
    secretName: alchemist-metrics-tls-cert
  rules:
  - host: metrics.alchemist.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alchemist
            port:
              number: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: alchemist-nodeport
  namespace: alchemist-prod
  labels:
    app: alchemist
spec:
  type: NodePort
  selector:
    app: alchemist
  ports:
  - name: http
    port: 8080
    targetPort: http
    nodePort: 30080
    protocol: TCP