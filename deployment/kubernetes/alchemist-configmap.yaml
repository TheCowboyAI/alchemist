apiVersion: v1
kind: ConfigMap
metadata:
  name: alchemist-config
  namespace: alchemist-prod
data:
  config.toml: |
    # Production Configuration for Alchemist (Kubernetes)
    
    [general]
    default_ai_model = "claude-3-production"
    dialog_history_path = "/var/lib/alchemist/dialogs"
    progress_file_path = "/var/lib/alchemist/progress/progress.json"
    nats_url = "nats://nats:4222"
    log_level = "warn"
    
    # Production AI Models Configuration
    [ai_models.gpt-4-production]
    provider = "openai"
    endpoint = "https://api.openai.com/v1"
    api_key_env = "OPENAI_API_KEY"
    model_name = "gpt-4-turbo"
    max_tokens = 8192
    temperature = 0.5
    timeout_seconds = 120
    retry_attempts = 3
    retry_delay_ms = 1000
    
    [ai_models.gpt-4-production.params]
    top_p = 0.9
    frequency_penalty = 0.1
    presence_penalty = 0.1
    
    [ai_models.claude-3-production]
    provider = "anthropic"
    endpoint = "https://api.anthropic.com/v1"
    api_key_env = "ANTHROPIC_API_KEY"
    model_name = "claude-3-opus-20240229"
    max_tokens = 8192
    temperature = 0.5
    timeout_seconds = 120
    retry_attempts = 3
    retry_delay_ms = 1000
    
    [ai_models.claude-3-production.params]
    top_p = 0.9
    
    # Policy Configuration
    [policy]
    storage_path = "/var/lib/alchemist/policies"
    validation_enabled = true
    evaluation_timeout = 10000
    cache_size = 1000
    cache_ttl_seconds = 3600
    
    # Security Configuration
    [security]
    tls_enabled = true
    tls_cert_path = "/etc/alchemist/certs/tls.crt"
    tls_key_path = "/etc/alchemist/certs/tls.key"
    tls_ca_path = "/etc/alchemist/certs/ca.crt"
    auth_enabled = true
    jwt_secret_env = "ALCHEMIST_JWT_SECRET"
    jwt_expiry_hours = 24
    api_key_header = "X-API-Key"
    api_key_env = "ALCHEMIST_API_KEY"
    
    # Performance Configuration
    [performance]
    max_concurrent_requests = 100
    request_timeout_seconds = 300
    worker_threads = 16
    async_runtime_threads = 8
    connection_pool_size = 50
    connection_idle_timeout_seconds = 60
    
    # Monitoring Configuration
    [monitoring]
    metrics_enabled = true
    metrics_port = 9090
    metrics_path = "/metrics"
    tracing_enabled = true
    tracing_endpoint = "http://jaeger-collector:4317"
    tracing_sample_rate = 0.1
    health_check_port = 8081
    health_check_path = "/health"
    
    # Storage Configuration
    [storage]
    data_dir = "/var/lib/alchemist/data"
    temp_dir = "/var/lib/alchemist/tmp"
    backup_dir = "/var/lib/alchemist/backups"
    max_file_size_mb = 100
    cleanup_interval_hours = 24
    retention_days = 90
    
    # Rate Limiting
    [rate_limiting]
    enabled = true
    requests_per_minute = 1000
    requests_per_hour = 50000
    burst_size = 100
    cleanup_interval_minutes = 5
    
    # Circuit Breaker
    [circuit_breaker]
    enabled = true
    failure_threshold = 5
    success_threshold = 2
    timeout_seconds = 60
    half_open_requests = 3
    
    # Caching
    [cache]
    enabled = true
    redis_url = "redis://redis:6379"
    default_ttl_seconds = 3600
    max_entries = 10000
    eviction_policy = "lru"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: alchemist-prod
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
    - job_name: 'alchemist'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - alchemist-prod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: alchemist-prod
data:
  alchemist-dashboard.json: |
    {
      "dashboard": {
        "title": "Alchemist Production Metrics",
        "panels": [
          {
            "title": "Request Rate",
            "targets": [
              {
                "expr": "rate(http_requests_total[5m])"
              }
            ]
          },
          {
            "title": "Response Time",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))"
              }
            ]
          },
          {
            "title": "Domain Events",
            "targets": [
              {
                "expr": "rate(domain_events_total[5m])"
              }
            ]
          },
          {
            "title": "Error Rate",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\"}[5m])"
              }
            ]
          }
        ]
      }
    }