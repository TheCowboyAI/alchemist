apiVersion: apps/v1
kind: Deployment
metadata:
  name: alchemist
  namespace: alchemist-prod
  labels:
    app: alchemist
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: alchemist
  template:
    metadata:
      labels:
        app: alchemist
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: alchemist
      containers:
      - name: alchemist
        image: alchemist:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "warn"
        - name: ALCHEMIST_CONFIG
          value: "/etc/alchemist/config.toml"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: alchemist-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: alchemist-secrets
              key: anthropic-api-key
        - name: ALCHEMIST_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: alchemist-secrets
              key: jwt-secret
        - name: ALCHEMIST_API_KEY
          valueFrom:
            secretKeyRef:
              name: alchemist-secrets
              key: api-key
        volumeMounts:
        - name: config
          mountPath: /etc/alchemist
          readOnly: true
        - name: tls-certs
          mountPath: /etc/alchemist/certs
          readOnly: true
        - name: data
          mountPath: /var/lib/alchemist
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: alchemist-config
      - name: tls-certs
        secret:
          secretName: alchemist-tls
      - name: data
        persistentVolumeClaim:
          claimName: alchemist-data
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alchemist
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: alchemist
  namespace: alchemist-prod
  labels:
    app: alchemist
spec:
  selector:
    app: alchemist
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: alchemist
  namespace: alchemist-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: alchemist
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: alchemist
  namespace: alchemist-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: alchemist
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: alchemist
  namespace: alchemist-prod
spec:
  podSelector:
    matchLabels:
      app: alchemist
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: alchemist-prod
    - podSelector:
        matchLabels:
          app: nginx
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: alchemist-prod
    ports:
    - protocol: TCP
      port: 4222  # NATS
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6333  # Qdrant
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53